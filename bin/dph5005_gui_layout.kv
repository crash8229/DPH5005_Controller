#:import os os
#:import sys sys


<Button>:
    background_color: .8, .8, .8, 1
    color: .3, .8, .8, 1
#    disabled_foreground_color: 1, 0, 0, 1
    size_hint: None, None
    size: 100, 50

<Label>:
    color: .3, .8, .8, 1
    size_hint: None, None
    halign: 'right'
    font_size: 20
#    font_size: 15
#    size: 90, 30
    size: 120, 30

<IndicatorLabel@Label>:
    font_size: 20

<TextInput>:
    background_color: .3, .3, .3, 1
    foreground_color: .3, .8, .8, 1
    disabled_background_color: .3, .3, .3, 1
    disabled_foreground_color: .3, .8, .8, 1
    size_hint: None, None
    size: 100, 30
    font_size: 15
    multiline: False
    input_filter: 'float'

<MySlider@Slider>:
    size_hint: None, None
    size: 300, 30
    step: 1

<MainScreen>:
    id: main
    controllers: controllers
    serial_port_button: serial_port_button
    serial_port_status: serial_port_status
    address: address
    v_set: v_set
    i_set: i_set
    v_out: v_out
    i_out: i_out
    power: power
    v_in: v_in
    lock: lock
    protect: protect
    cvcc: cvcc
    enable: enable
    b_led_set: b_led_set
    GridLayout:
        rows: 2
        cols: 1

        canvas:
            Color:
                rgba: .1, .1, .1, 1
            Rectangle:
                pos: 0, 0
                size: root.width, root.height

            # These create the guidelines for lining up the columns
    #        Color:
    #            rgba: 1, 1, 1, 1
    #        Rectangle:
    #            pos: root.width/4, 0
    #            size: 1, root.height
    #        Rectangle:
    #            pos: root.width/2, 0
    #            size: 1, root.height
    #        Rectangle:
    #            pos: root.width*3/4, 0
    #            size: 1, root.height

        # Contains the title and exit button
        FloatLayout:
            size_hint_y: 0.05
            Label:
                text: 'DPH5005 Controller'
                color: .3, .8, .8, 1
                pos: root.width / 2 - self.width / 2, root.height - self.height
                bold: True
                font_size: 20
                size: self.width, self.font_size

            Button:
                text: 'X'
                font_size: 20
                bold: True
                size: self.font_size + 5, self.font_size
                pos: root.width - self.width, root.height - self.height
                on_release: root.on_close()

        # This holds the controls and indicators of the power supply
        BoxLayout:
            orientation: 'horizontal'

            # This is the first column and contains the controls for the power supply
            BoxLayout:
                orientation: 'vertical'
                spacing: 0
                padding: 0

                # This creates the serial port menu. The dropdown is create is the python script
                BoxLayout:
                    orientation: 'horizontal'
                    spacing: 0
                    size_hint_y: 0.5
                    AnchorLayout:
                        anchor_x: 'right'
                        anchor_y: 'center'
                        Label:
                            text: 'Serial Port:'

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'center'
                        size_hint_x: 0.7
                        Button:
                            id: serial_port_button
                            status: serial_port_status
                            text: 'Select Port'
                            font_size: 15
                            size: 150, 20

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'center'
                        size_hint_x: 0.5
                        Image:
                            id: serial_port_status
#                            source: os.path.join(sys.path[0], 'bin', 'x.png')

                # This creates the address field
                BoxLayout:
                    orientation: 'horizontal'
                    spacing: 0
                    padding: 0
                    size_hint_y: 0.4
                    AnchorLayout:
                        anchor_x: 'right'
                        anchor_y: 'center'
                        size_hint_x: 0.7
                        Label:
                            text: 'Address:'

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'center'
                        size_hint_x: 0.2
                        TextInput:
                            id: address
                            text: '1'
                            value: 1
#                            size: 40, self.size[1]
                            input_filter: 'int'
                            status: address_status
                            changed: True
                            on_text_validate: main.validate_address()
                            on_text: main.warning_address()

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'center'
                        size_hint_x: 0.5
                        Image:
                            id: address_status
#                            source: os.path.join(sys.path[0], 'bin', 'x.png')


                BoxLayout:
                    orientation: 'vertical'
                    spacing: 0
                    padding: 0
                    size_hint_y: 4
                    disabled: True
                    id: controllers
                    # This creates the voltage controller
                    BoxLayout:
                        orientation: 'vertical'
                        spacing: 5
                        BoxLayout:
                            orientation: 'horizontal'
                            AnchorLayout:
                                anchor_x: 'right'
                                anchor_y: 'center'
                                size_hint_x: 0.7
                                Label:
                                    text: 'Set Voltage:'

                            AnchorLayout:
                                anchor_x: 'left'
                                anchor_y: 'center'
                                size_hint_x: 0.2
                                TextInput:
                                    id: v_set
                                    text: '0.0'
                                    value: 0.0
                                    status: v_set_status
                                    slider: v_set_slider
                                    changed: False
                                    on_text_validate: main.validate_text('V-SET', v_set_slider, self)
                                    on_text: main.warning_control(self)
                            AnchorLayout:
                                anchor_x: 'left'
                                anchor_y: 'center'
                                size_hint_x: 0.5
                                Image:
                                    id: v_set_status
    #                                source: os.path.join(sys.path[0], 'bin', 'warning.png')

                        AnchorLayout:
                            anchor_x: 'center'
                            anchor_y: 'top'
                            MySlider:
                                min: 0
                                max: 50
                                step: 0.01
                                id: v_set_slider
                                do_not_update: False
                                changed: False
                                on_value: main.validate_slider('V-SET', self, v_set)
                                on_touch_up: main.slider_send(self)
#                                on_touch_up: if self.collide_point(*args[1].pos): main.validate('V-SET', 'slider', self, v_set)
#                                on_touch_up: main.slider_send_command('V-SET', self.value)

                    # This creates the current controller
                    BoxLayout:
                        orientation: 'vertical'
                        spacing: 5
                        BoxLayout:
                            orientation: 'horizontal'
                            AnchorLayout:
                                anchor_x: 'right'
                                anchor_y: 'center'
                                size_hint_x: 0.7
                                Label:
                                    text: 'Set Current:'

                            AnchorLayout:
                                anchor_x: 'left'
                                anchor_y: 'center'
                                size_hint_x: 0.2
                                TextInput:
                                    id: i_set
                                    text: '0.0'
                                    value: 0.0
                                    status: i_set_status
                                    slider: i_set_slider
                                    changed: False
                                    on_text_validate: main.validate_text('I-SET', i_set_slider, self)
                                    on_text: main.warning_control(self)

                            AnchorLayout:
                                anchor_x: 'left'
                                anchor_y: 'center'
                                size_hint_x: 0.5
                                Image:
                                    id: i_set_status
    #                                source: os.path.join(sys.path[0], 'bin', 'warning.png')

                        AnchorLayout:
                            anchor_x: 'center'
                            anchor_y: 'top'
                            MySlider:
                                min: 0
                                max: 5
                                step: 0.001
                                id: i_set_slider
                                do_not_update: False
                                on_value: main.validate_slider('I-SET', self, i_set)
                                on_touch_up: main.slider_send(self)
#                                on_touch_up: if self.collide_point(*args[1].pos): main.validate('I-SET', 'slider', self, i_set)
#                                on_touch_up: main.slider_send_command('I-SET', self.value)

                    # This creates the backlight controller
                    BoxLayout:
                        orientation: 'vertical'
                        spacing: 5
                        BoxLayout:
                            orientation: 'horizontal'
                            AnchorLayout:
                                anchor_x: 'right'
                                anchor_y: 'center'
                                size_hint_x: 0.7
                                Label:
                                    text: 'Backlight:'
                                    size: 100, self.size[1]
    #                                size: 75, self.size[1]

                            AnchorLayout:
                                anchor_x: 'left'
                                anchor_y: 'center'
                                size_hint_x: 0.2
                                TextInput:
                                    id: b_led_set
                                    text: '0'
                                    value: 0
                                    status: b_led_status
                                    slider: b_led_slider
                                    changed: False
                                    input_filter: 'int'
                                    on_text_validate: main.validate_text('B-LED', b_led_slider, self)
                                    on_text: main.warning_control(self)

                            AnchorLayout:
                                anchor_x: 'left'
                                anchor_y: 'center'
                                size_hint_x: 0.5
                                Image:
                                    id: b_led_status
    #                                source: os.path.join(sys.path[0], 'bin', 'warning.png')

                        AnchorLayout:
                            anchor_x: 'center'
                            anchor_y: 'top'
                            MySlider:
                                min: 0
                                max: 5
                                id: b_led_slider
                                do_not_update: False
                                changed: False
                                on_value: main.validate_slider('B-LED', self, b_led_set)
                                on_touch_up: main.slider_send(self)
#                                on_touch_up: if self.collide_point(*args[1].pos): main.validate('B-LED', 'slider', self, b_led_set)
#                                on_touch_up: main.slider_send_command('B-LED', self.value)

                    # This creates the enable and key lock buttons
                    BoxLayout:
                        orientation: 'horizontal'
                        spacing: 10
                        AnchorLayout:
                            anchor_x: 'right'
                            anchor_y: 'center'
                            Button:
                                id: enable
                                text: 'OFF'
                                bold: True
                                font_size: 20
                                size: self.size[0], 50
                                background_color: 1, 0, 0, 1
                                changed: False
                                value: 0
                                on_release: main.enable_toggle()

                        AnchorLayout:
                            anchor_x: 'left'
                            anchor_y: 'center'
                            Button:
                                id: lock
                                size: self.size[0], 50
                                background_color: 1, 0, 0, 1
                                status: lock_status
                                value: 0
                                changed: False
                                on_release: main.lock_toggle()
                            RelativeLayout:
                                Image:
                                    id: lock_status
                                    status: 'unlocked'
    #                                source: os.path.join(sys.path[0], 'bin', 'lock-unlocked.png')
    #                                pos: 0, 0
    #                                pos: lock.pos[0] - lock.width/2 - 8, lock.pos[1] - lock.height/2 + 3
                                    pos: 22 - lock.width/2, 0

            # This is the second column and contains the indicators for the power supply
            BoxLayout:
                orientation: 'vertical'
                spacing: 0
                BoxLayout:
                    orientation: 'horizontal'
                    AnchorLayout:
                        anchor_x: 'right'
                        anchor_y: 'center'
                        IndicatorLabel:
                            text: 'V-IN:'
                            size: 60, self.size[1]

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'center'
                        IndicatorLabel:
                            id: v_in
                            text: '0.000'
                            size: 40, self.size[1]

                BoxLayout:
                    orientation: 'horizontal'
                    AnchorLayout:
                        anchor_x: 'right'
                        anchor_y: 'center'
                        IndicatorLabel:
                            text: 'V-OUT:'
                            size: 80, self.size[1]

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'center'
                        IndicatorLabel:
                            id: v_out
                            text: '0.000'
                            size: 40, self.size[1]

                BoxLayout:
                    orientation: 'horizontal'
                    AnchorLayout:
                        anchor_x: 'right'
                        anchor_y: 'center'
                        IndicatorLabel:
                            text: 'I-OUT:'
                            size: 75, self.size[1]

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'center'
                        IndicatorLabel:
                            id: i_out
                            text: '0.000'
                            size: 40, self.size[1]

                BoxLayout:
                    orientation: 'horizontal'
                    AnchorLayout:
                        anchor_x: 'right'
                        anchor_y: 'center'
                        IndicatorLabel:
                            text: 'Power:'
                            size: 80, self.size[1]

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'center'
                        IndicatorLabel:
                            id: power
                            text: '0.000'
                            size: 40, self.size[1]

                BoxLayout:
                    orientation: 'horizontal'
                    AnchorLayout:
                        anchor_x: 'right'
                        anchor_y: 'center'
                        IndicatorLabel:
                            text: 'CV/CC:'
                            size: 60, self.size[1]

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'center'
                        IndicatorLabel:
                            id: cvcc
                            text: 'CV'
                            size: 40, self.size[1]
                            value: 0

                BoxLayout:
                    orientation: 'horizontal'
                    AnchorLayout:
                        anchor_x: 'right'
                        anchor_y: 'center'
                        IndicatorLabel:
                            text: 'Protection\nStatus:'
                            halign: 'right'
                            size: 110, self.size[1]

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'center'
                        IndicatorLabel:
                            id: protect
                            text: 'OK'
                            font_size: 30
                            value: 0
                            color: 0, 1, 0, 1
                            size: 60, self.size[1]

                # This creates the enable and key lock buttons
#                BoxLayout:
#                    orientation: 'horizontal'
#                    spacing: 10
#                    AnchorLayout:
#                        anchor_x: 'right'
#                        anchor_y: 'center'
#                        Button:
#                            id: protect
#                            text: 'PROTECT'
#                            disabled: True
#                            size: self.size[0], 50
#                            background_color: 1, 0, 0, 1
#
#                    AnchorLayout:
#                        anchor_x: 'left'
#                        anchor_y: 'center'
#                        Button:
#                            id: cvcc
#                            text: 'CC/CV'
#                            disabled: True
#                            disabled_background_color: self.background_color
#                            size: self.size[0], 50
#                            background_color: 0, 1, 0, 1

                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'center'
                    Button:
                        id: graph_button
                        text: 'Switch to graph'
                        size: 150, self.size[1]
                        on_release:
                            root.manager.current = 'GraphScreen'
                            root.manager.transition.direction = 'left'

<GraphScreen>:
    id: graph_window
    GridLayout:
        rows: 2
        cols: 1

        canvas:
            Color:
                rgba: .1, .1, .1, 1
            Rectangle:
                pos: 0, 0
                size: root.width, root.height

            # These create the guidelines for lining up the columns
#            Color:
#                rgba: 1, 1, 1, 1
#            Rectangle:
#                pos: root.width/4, 0
#                size: 1, root.height
#            Rectangle:
#                pos: root.width/2, 0
#                size: 1, root.height
#            Rectangle:
#                pos: root.width*3/4, 0
#                size: 1, root.height

        # Contains the title and exit button
        FloatLayout:
            size_hint_y: 0.05
            Label:
                text: 'DPH5005 Controller'
                color: .3, .8, .8, 1
                pos: root.width / 2 - self.width / 2, root.height - self.height
                bold: True
                font_size: 20
                size: self.width, self.font_size

            Button:
                text: 'X'
                font_size: 20
                bold: True
                size: self.font_size + 5, self.font_size
                pos: root.width - self.width, root.height - self.height
                on_release: root.on_close()

        GridLayout:
            rows: 3
            cols: 1
            AnchorLayout:
                anchor_x: 'center'
                anchor_y: 'center'
                size_hint_y: 0.1
                Button:
                    id: main_button
                    text: 'Switch to control panel'
                    size: 220, self.size[1]
                    on_release:
                        root.manager.current = 'MainScreen'
                        root.manager.transition.direction = 'right'
            GridLayout:
                rows: 2
                cols: 2
                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'top'
                    Button:
                        text: '1'
                        size_hint: 1, 1
                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'top'
                    Button:
                        text: '2'
                        size_hint: 1, 1
                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'bottom'
                    Button:
                        text: '3'
                        size_hint: 1, 1
                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'bottom'
                    Button:
                        text: '4'
                        size_hint: 1, 1
            GridLayout:
                rows: 1
                cols: 3
                size_hint_y: 0.15
                AnchorLayout:
                    anchor_x: 'right'
                    anchor_y: 'center'
                    Button:
                        text: '1'
                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'center'
                    Button:
                        text: '2'
                AnchorLayout:
                    anchor_x: 'left'
                    anchor_y: 'center'
                    Button:
                        text: '3'