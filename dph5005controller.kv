#:import os os

<Button>:
    background_color: .8, .8, .8, 1
    color: .3, .8, .8, 1
    size_hint: None, None
    size: 100, 50

<Label>:
    color: .3, .8, .8, 1
    size_hint: None, None
    font_size: 15
    size: 90, 30

<TextInput>:
    background_color: .3, .3, .3, 1
    foreground_color: .3, .8, .8, 1
    disabled_background_color: .3, .3, .3, 1
    disabled_foreground_color: .3, .8, .8, 1
    size_hint: None, None
    size: 100, 30
    font_size: 15
    multiline: False
    input_filter: 'float'

<Slider>:
    size_hint: None, None
    size: 300, 30
    step: 1

<MainScreen>:
    id: main
    rows: 2
    cols: 1

    serial_port_menu_button: dropdown_button

    canvas:
        Color:
            rgba: .1, .1, .1, 1
        Rectangle:
            pos: 0, 0
            size: root.width, root.height

        # These create the guidelines for lining up the columns
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            pos: root.width/4, 0
            size: 1, root.height
        Rectangle:
            pos: root.width/2, 0
            size: 1, root.height
        Rectangle:
            pos: root.width*3/4, 0
            size: 1, root.height

    # Contains the title and exit button
    FloatLayout:
        size_hint_y: 0.01
        Label:
            text: 'DPH5005 Controller'
            color: .3, .8, .8, 1
            pos: root.width / 2 - self.width / 2, root.height - self.height
            bold: True
            font_size: 20
            size: self.width, self.font_size

        Button:
            text: 'X'
            font_size: 20
            bold: True
            size: self.font_size + 5, self.font_size
            pos: root.width - self.width, root.height - self.height
            on_release: root.on_close()

    # This holds the controls and indicators of the power supply
    BoxLayout:
        orientation: 'horizontal'

        # This is the first column and contains the controls for the power supply
        BoxLayout:
            orientation: 'vertical'

            # This creates the serial port menu. The dropdown is create is the python script
            BoxLayout:
                orientation: 'horizontal'
                AnchorLayout:
                    anchor_x: 'right'
                    Label:
                        id: serial_port
                        text: 'Serial Port:'

                AnchorLayout:
                    anchor_x: 'left'
                    Button:
                        id: dropdown_button
                        text: 'Select Port'
                        size: 150, 20

            # TODO: change the on_text methods to validate both silder and textbox
            # This creates the voltage controller
            BoxLayout:
                orientation: 'vertical'
                spacing: 5
                BoxLayout:
                    orientation: 'horizontal'
                    AnchorLayout:
                        anchor_x: 'right'
                        anchor_y: 'bottom'
                        Label:
                            text: 'Set Voltage:'

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'bottom'
                        TextInput:
                            id: v_set
                            text: str(v_set_slider.value)
                            on_text: v_set_slider.value = float('{:.4n}'.format(float(self.text))) if main.is_number(self.text) else 0.0

                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'top'
                    Slider:
                        min: 0
                        max: 50
                        step: 0.01
                        id: v_set_slider

            # This creates the current controller
            BoxLayout:
                orientation: 'vertical'
                spacing: 5
                BoxLayout:
                    orientation: 'horizontal'
                    AnchorLayout:
                        anchor_x: 'right'
                        anchor_y: 'bottom'
                        Label:
                            text: 'Set Current:'

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'bottom'
                        TextInput:
                            id: i_set
                            text: str(i_set_slider.value)
                            on_text: i_set_slider.value = float('{:.4n}'.format(float(self.text))) if main.is_number(self.text) else 0.0

                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'top'
                    Slider:
                        min: 0
                        max: 5
                        step: 0.001
                        id: i_set_slider

            # This creates the backlight controller
            BoxLayout:
                orientation: 'vertical'
                spacing: 5
                BoxLayout:
                    orientation: 'horizontal'
                    AnchorLayout:
                        anchor_x: 'right'
                        anchor_y: 'bottom'
                        Label:
                            text: 'Backlight:'
                            size: 75, self.size[1]

                    AnchorLayout:
                        anchor_x: 'left'
                        anchor_y: 'bottom'
                        TextInput:
                            id: b_led_set
                            text: str(int(b_led_slider.value))
                            input_filter: 'int'
                            on_text: b_led_slider.value = int(self.text) if self.text.isdigit() else 0

                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'top'
                    Slider:
                        min: 0
                        max: 5
                        id: b_led_slider

            # This creates the enable and key lock buttons
            BoxLayout:
                orientation: 'horizontal'
                spacing: 10
                AnchorLayout:
                    anchor_x: 'right'
                    anchor_y: 'center'
                    Button:
                        id: enable
                        text: 'OFF'
                        bold: True
                        font_size: 20
                        size: self.size[0], 50
#                        color: 1, 0, 0, 1
                        background_color: 1, 0, 0, 1
                        on_press: self.text = 'ON' if self.text == 'OFF' else 'OFF'
                        on_press: self.background_color = (0, 1, 0, 1) if self.text == 'OFF' else (1, 0, 0, 1)

                AnchorLayout:
                    anchor_x: 'left'
                    anchor_y: 'center'
                    Button:
                        id: lock
#                        text: 'LOCK'
                        size: self.size[0], 50
#                        color: 1, 0, 0, 1
                        background_color: 1, 0, 0, 1
                        on_press: lock_icon.source = os.path.join(os.getcwd(), 'bin', 'lock-locked.png') if lock_icon.status == 'unlocked' else os.path.join(os.getcwd(), 'bin', 'lock-unlocked.png')
                        on_press: self.background_color = (0, 1, 0, 1) if lock_icon.status == 'unlocked' else (1, 0, 0, 1)
                        on_press: lock_icon.status = 'locked' if lock_icon.status == 'unlocked' else 'unlocked'
                    FloatLayout:
                        Image:
                            id: lock_icon
                            status: 'unlocked'
                            source: os.path.join(os.getcwd(), 'bin', 'lock-unlocked.png')
                            pos: lock.pos[0] - lock.width/2 - 8, lock.pos[1] - lock.height/2 + 3

        # This is the second column and contains the indicators for the power supply
        BoxLayout:
            orientation: 'vertical'
            spacing: 5
            BoxLayout:
                orientation: 'horizontal'
                AnchorLayout:
                    anchor_x: 'right'
                    anchor_y: 'center'
                    Label:
                        text: 'V-IN:'
                        size: 40, self.size[1]

                AnchorLayout:
                    anchor_x: 'left'
                    anchor_y: 'center'
                    Label:
                        id: v_in
                        text: '0.000'
                        disabled: True
                        size: 40, self.size[1]

            BoxLayout:
                orientation: 'horizontal'
                AnchorLayout:
                    anchor_x: 'right'
                    anchor_y: 'center'
                    Label:
                        text: 'V-OUT:'
                        size: 60, self.size[1]

                AnchorLayout:
                    anchor_x: 'left'
                    anchor_y: 'center'
                    Label:
                        id: v_out
                        text: '0.000'
                        disabled: True
                        size: 40, self.size[1]

            BoxLayout:
                orientation: 'horizontal'
                AnchorLayout:
                    anchor_x: 'right'
                    anchor_y: 'center'
                    Label:
                        text: 'I-IN:'
                        size: 40, self.size[1]

                AnchorLayout:
                    anchor_x: 'left'
                    anchor_y: 'center'
                    Label:
                        id: i_in
                        text: '0.000'
                        disabled: True
                        size: 40, self.size[1]

            BoxLayout:
                orientation: 'horizontal'
                AnchorLayout:
                    anchor_x: 'right'
                    anchor_y: 'center'
                    Label:
                        text: 'Power:'
                        size: 60, self.size[1]

                AnchorLayout:
                    anchor_x: 'left'
                    anchor_y: 'center'
                    Label:
                        id: power
                        text: '0.000'
                        disabled: True
                        size: 40, self.size[1]

            # This creates the enable and key lock buttons
            BoxLayout:
                orientation: 'horizontal'
                spacing: 10
                AnchorLayout:
                    anchor_x: 'right'
                    anchor_y: 'center'
                    Button:
                        id: protect
                        text: 'protect'
                        size: self.size[0], 50
                        background_color: 1, 0, 0, 1

                AnchorLayout:
                    anchor_x: 'left'
                    anchor_y: 'center'
                    Button:
                        id: cvcc
                        text: 'CC/CV'
                        size: self.size[0], 50
                        background_color: 1, 0, 0, 1

            AnchorLayout:
                anchor_x: 'center'
                anchor_y: 'center'
                Button:
                    id: graph
                    text: 'Switch to graph'
                    size: 150, self.size[1]
